Please generate a unit test for the following C++ code using the Drogon testing framework.

Configuration:
test_generation:
  framework: drogon
  test_location: "./test"
  test_naming_convention: "test_{controller}_{action}.cc"
  coverage:
    - controllers
    - models
    - services
  assertions:
    - response_code
    - response_body
    - error_handling
  test_cases:
    - positive_cases: true
    - negative_cases: true
    - edge_cases: true
  generate_mocks: true

Source code to test:
#include <drogon/utils/Utilities.h>
#include <drogon/drogon_test.h>
using namespace drogon;

DROGON_TEST(HttpDate)
{
    // RFC 850
    auto date = utils::getHttpDate("Fri, 05-Jun-20 09:19:38 GMT");
    CHECK(date.microSecondsSinceEpoch() / MICRO_SECONDS_PRE_SEC == 1591348778);

    // Reddit format
    date = utils::getHttpDate("Fri, 05-Jun-2020 09:19:38 GMT");
    CHECK(date.microSecondsSinceEpoch() / MICRO_SECONDS_PRE_SEC == 1591348778);

    // Invalid
    date = utils::getHttpDate("Fri, this format is invalid");
    CHECK(date.microSecondsSinceEpoch() == std::numeric_limits<int64_t>::max());

    // ASC Time
    auto epoch = time(nullptr);
    auto str = asctime(gmtime(&epoch));
    date = utils::getHttpDate(str);
    CHECK(date.microSecondsSinceEpoch() / MICRO_SECONDS_PRE_SEC == epoch);
}


Generate comprehensive unit tests that cover positive cases, negative cases, and edge cases.