Please generate a unit test for the following C++ code using the Drogon testing framework.

Configuration:
test_generation:
  framework: drogon
  test_location: "./test"
  test_naming_convention: "test_{controller}_{action}.cc"
  coverage:
    - controllers
    - models
    - services
  assertions:
    - response_code
    - response_body
    - error_handling
  test_cases:
    - positive_cases: true
    - negative_cases: true
    - edge_cases: true
  generate_mocks: true

Source code to test:
#include "JwtPlugin.h"
#include <drogon/drogon.h>

using namespace drogon;

void JwtPlugin::initAndStart(const Json::Value &config) {
    LOG_DEBUG << "JWT initialized and Start";
    this->config = config;
}

void JwtPlugin::shutdown() {
    LOG_DEBUG << "JWT shuut down";
}

auto JwtPlugin::init() -> Jwt {
    auto secret = config.get("secret", "secret").asString();
    auto sessionTime = config.get("sessionTime", 3600).asInt();
    auto issuer = config.get("issuer", "auth0").asString();
    Jwt jwt(secret, sessionTime, issuer);
    return jwt;
}


Generate comprehensive unit tests that cover positive cases, negative cases, and edge cases.