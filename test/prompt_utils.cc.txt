Please generate a unit test for the following C++ code using the Drogon testing framework.

Configuration:
test_generation:
  framework: drogon
  test_location: "./test"
  test_naming_convention: "test_{controller}_{action}.cc"
  coverage:
    - controllers
    - models
    - services
  assertions:
    - response_code
    - response_body
    - error_handling
  test_cases:
    - positive_cases: true
    - negative_cases: true
    - edge_cases: true
  generate_mocks: true

Source code to test:
#include "utils.h"

void badRequest(std::function<void(const drogon::HttpResponsePtr &)> &&callback, std::string err, drogon::HttpStatusCode code)
{
    Json::Value ret{};
    ret["error"] = err;
    auto resp = drogon::HttpResponse::newHttpJsonResponse(ret);
    resp->setStatusCode(code);
    callback(resp);
}

Json::Value makeErrResp(std::string err) {
    Json::Value ret{};
    ret["error"] = err;
    return ret;
}


Generate comprehensive unit tests that cover positive cases, negative cases, and edge cases.