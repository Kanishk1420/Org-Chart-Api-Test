Please generate a unit test for the following C++ code using the Drogon testing framework.

Configuration:
test_generation:
  framework: drogon
  test_location: "./test"
  test_naming_convention: "test_{controller}_{action}.cc"
  coverage:
    - controllers
    - models
    - services
  assertions:
    - response_code
    - response_body
    - error_handling
  test_cases:
    - positive_cases: true
    - negative_cases: true
    - edge_cases: true
  generate_mocks: true

Source code to test:
/**
 *
 *  HttpFileUploadRequest.h
 *  An Tao
 *
 *  Copyright 2018, An Tao.  All rights reserved.
 *  https://github.com/an-tao/drogon
 *  Use of this source code is governed by a MIT license
 *  that can be found in the License file.
 *
 *  Drogon
 *
 */

#pragma once
#include "HttpRequestImpl.h"
#include <string>
#include <vector>

namespace drogon
{
class HttpFileUploadRequest : public HttpRequestImpl
{
  public:
    const std::string &boundary() const
    {
        return boundary_;
    }
    const std::vector<UploadFile> &files() const
    {
        return files_;
    }
    explicit HttpFileUploadRequest(const std::vector<UploadFile> &files);

  private:
    std::string boundary_;
    std::vector<UploadFile> files_;
};

}  // namespace drogon


Generate comprehensive unit tests that cover positive cases, negative cases, and edge cases.