Please generate a unit test for the following C++ code using the Drogon testing framework.

Configuration:
test_generation:
  framework: drogon
  test_location: "./test"
  test_naming_convention: "test_{controller}_{action}.cc"
  coverage:
    - controllers
    - models
    - services
  assertions:
    - response_code
    - response_body
    - error_handling
  test_cases:
    - positive_cases: true
    - negative_cases: true
    - edge_cases: true
  generate_mocks: true

Source code to test:
/**
 *
 *  HttpBinder.h
 *  Martin Chang
 *
 *  Copyright 2021, Martin Chang.  All rights reserved.
 *  https://github.com/an-tao/drogon
 *  Use of this source code is governed by a MIT license
 *  that can be found in the License file.
 *
 *  Drogon
 *
 */

#include <drogon/HttpBinder.h>
#include <drogon/HttpAppFramework.h>

namespace drogon
{
namespace internal
{
void handleException(const std::exception& e,
                     const HttpRequestPtr& req,
                     std::function<void(const HttpResponsePtr&)>&& callback)
{
    app().getExceptionHandler()(e, req, std::move(callback));
}
}  // namespace internal
}  // namespace drogon

Generate comprehensive unit tests that cover positive cases, negative cases, and edge cases.