Please generate a unit test for the following C++ code using the Drogon testing framework.

Configuration:
test_generation:
  framework: drogon
  test_location: "./test"
  test_naming_convention: "test_{controller}_{action}.cc"
  coverage:
    - controllers
    - models
    - services
  assertions:
    - response_code
    - response_body
    - error_handling
  test_cases:
    - positive_cases: true
    - negative_cases: true
    - edge_cases: true
  generate_mocks: true

Source code to test:
/**
 *
 *  CustomHeaderFilter.cc
 *
 */

#include "CustomHeaderFilter.h"

using namespace drogon;

void CustomHeaderFilter::doFilter(const HttpRequestPtr &req,
                                  FilterCallback &&fcb,
                                  FilterChainCallback &&fccb)
{
    if (req->getHeader(field_) == value_)
    {
        // Passed
        fccb();
        return;
    }
    // Check failed
    auto res = drogon::HttpResponse::newHttpResponse();
    res->setStatusCode(k500InternalServerError);
    fcb(res);
}


Generate comprehensive unit tests that cover positive cases, negative cases, and edge cases.