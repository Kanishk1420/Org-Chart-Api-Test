Please generate a unit test for the following C++ code using the Drogon testing framework.

Configuration:
test_generation:
  framework: drogon
  test_location: "./test"
  test_naming_convention: "test_{controller}_{action}.cc"
  coverage:
    - controllers
    - models
    - services
  assertions:
    - response_code
    - response_body
    - error_handling
  test_cases:
    - positive_cases: true
    - negative_cases: true
    - edge_cases: true
  generate_mocks: true

Source code to test:
#pragma once
#include <drogon/HttpController.h>
using namespace drogon;
class CustomCtrl : public drogon::HttpController<CustomCtrl, false>
{
  public:
    METHOD_LIST_BEGIN
    // use METHOD_ADD to add your custom processing function here;
    METHOD_ADD(CustomCtrl::hello,
               "/{userName}",
               Get,
               "CustomHeaderFilter");  // path is /customctrl/{arg1}
    METHOD_LIST_END

    explicit CustomCtrl(const std::string &greetings) : greetings_(greetings)
    {
    }

    void hello(const HttpRequestPtr &req,
               std::function<void(const HttpResponsePtr &)> &&callback,
               const std::string &userName) const;

  private:
    std::string greetings_;
};


Generate comprehensive unit tests that cover positive cases, negative cases, and edge cases.