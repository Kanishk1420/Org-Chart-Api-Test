Please generate a unit test for the following C++ code using the Drogon testing framework.

Configuration:
test_generation:
  framework: drogon
  test_location: "./test"
  test_naming_convention: "test_{controller}_{action}.cc"
  coverage:
    - controllers
    - models
    - services
  assertions:
    - response_code
    - response_body
    - error_handling
  test_cases:
    - positive_cases: true
    - negative_cases: true
    - edge_cases: true
  generate_mocks: true

Source code to test:
/**
 *
 *  PluginsManager.h
 *  An Tao
 *
 *  Copyright 2018, An Tao.  All rights reserved.
 *  https://github.com/an-tao/drogon
 *  Use of this source code is governed by a MIT license
 *  that can be found in the License file.
 *
 *  Drogon
 *
 */

#pragma once
#include <drogon/plugins/Plugin.h>
#include <map>

namespace drogon
{
using PluginBasePtr = std::unique_ptr<PluginBase>;

class PluginsManager : trantor::NonCopyable
{
  public:
    void initializeAllPlugins(
        const Json::Value &configs,
        const std::function<void(PluginBase *)> &forEachCallback);

    PluginBase *getPlugin(const std::string &pluginName);
    ~PluginsManager();

  private:
    std::map<std::string, PluginBasePtr> pluginsMap_;
    std::vector<PluginBase *> initializedPlugins_;
};

}  // namespace drogon


Generate comprehensive unit tests that cover positive cases, negative cases, and edge cases.