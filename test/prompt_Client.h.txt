Please generate a unit test for the following C++ code using the Drogon testing framework.

Configuration:
test_generation:
  framework: drogon
  test_location: "./test"
  test_naming_convention: "test_{controller}_{action}.cc"
  coverage:
    - controllers
    - models
    - services
  assertions:
    - response_code
    - response_body
    - error_handling
  test_cases:
    - positive_cases: true
    - negative_cases: true
    - edge_cases: true
  generate_mocks: true

Source code to test:
#pragma once
#include <drogon/HttpController.h>
using namespace drogon;
class Client : public drogon::HttpController<Client>
{
  public:
    METHOD_LIST_BEGIN
    METHOD_ADD(Client::get, "{1}", Get);
    METHOD_ADD(Client::post, "{1}", Post);
    METHOD_LIST_END

    void get(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback,
             std::string key);
    void post(const HttpRequestPtr &req,
              std::function<void(const HttpResponsePtr &)> &&callback,
              std::string key);
};


Generate comprehensive unit tests that cover positive cases, negative cases, and edge cases.